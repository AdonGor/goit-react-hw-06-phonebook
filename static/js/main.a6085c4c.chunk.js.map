{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/redux/phonebook-selectors.js","components/redux/phonebook-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","components/redux/phonebook-reducers.js","components/redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","onSubmit","event","preventDefault","namesIsIn","reduce","acc","contact","numbersIsIn","alert","contactCheck","phonebookActions","className","styles","form","label","type","value","onChange","currentTarget","input","button","Filter","actions","target","ContactList","list","map","item","text","onClick","onDeleteContact","App","totalContactsCount","length","createReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a6085c4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1pGcy\",\"label\":\"ContactForm_label__YcyjF\",\"input\":\"ContactForm_input__90tPh\",\"button\":\"ContactForm_button__2c2mx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1EzVM\",\"item\":\"ContactList_item__gloIO\",\"text\":\"ContactList_text__3q7S5\",\"span\":\"ContactList_span__HYqRU\",\"button\":\"ContactList_button__A-DNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__Ch_Lw\",\"input\":\"Filter_input__2LCph\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n    const normalizedFilter = filter.toLowerCase(); \n    \n    return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n    )\n}","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nexport const addContact = createAction('phonebook/add', (name, number) => ({\n    payload: {\n        id: shortid.generate(),\n        name,\n        number\n    },\n}));\n\nexport const deleteContact = createAction('phonebook/delete');\n\nexport const changeFilter=createAction('phonebook/changeFilter')","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../redux/phonebook-selectors';\nimport * as phonebookActions from '../redux/phonebook-actions';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm() {\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n   const onSubmit = (name, number) =>\n    dispatch(phonebookActions.addContact(name, number));\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactCheck = () => {\n    const namesIsIn = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      [],\n    );\n    const numbersIsIn = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      [],\n    );\n\n    if (namesIsIn.includes(name) || numbersIsIn.includes(number)) {\n      alert(`${name}${number} is already in contacts`);\n    }\n\n    if (name === '' || number === '') {\n      alert('Enter all data, please');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setName('');\n    setNumber('');\n    if (contactCheck()) {\n      return;\n    }\n\n    onSubmit(name, number);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name:\n          <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={event => setName(event.currentTarget.value)}\n          className={styles.input}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number:\n          <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={event => setNumber(event.currentTarget.value)}\n          className={styles.input}\n        />\n      </label>\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n        </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../redux/phonebook-selectors';\nimport * as actions from '../redux/phonebook-actions';\nimport styles from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const change = event => dispatch(actions.changeFilter(event.target.value));\n\n  return (\n    <label>\n      <div className={styles.label}>\n      Find contacts by name:\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={change}\n      />\n      </div>\n    </label>\n  );\n}\n\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../redux/phonebook-actions';\nimport {getVisibleContacts} from '../redux/phonebook-selectors'\nimport styles from './ContactList.module.css';\n\nfunction ContactList() {\n\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.item}>\n          <p className={styles.text}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={styles.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n\nexport default ContactList;\n","import { getVisibleContacts } from './components/redux/phonebook-selectors';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { useSelector } from 'react-redux';\nimport './App.css';\n\nexport default function App() {\n  const contacts = useSelector(getVisibleContacts);\n  const totalContactsCount = contacts.length;\n  \n    return (\n    <>\n      <h1 className='header'>Phonebook</h1>\n      <ContactForm />\n      <h2 className='header'>Contacts</h2>\n      <p className='header'>Общее кол-во: {totalContactsCount}</p>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\n\nconst initialContacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(\n    initialContacts, {\n        [addContact]: (state, { payload }) => [...state, payload],\n        [deleteContact]:(state, { payload })=>state.filter(({ id }) => id !== payload),\n    }\n)\n\nconst filter = createReducer('', {\n    [changeFilter]:(state, { payload }) => payload,\n}\n    \n)\n\nexport default combineReducers({\n  items,\n  filter,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './components/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}